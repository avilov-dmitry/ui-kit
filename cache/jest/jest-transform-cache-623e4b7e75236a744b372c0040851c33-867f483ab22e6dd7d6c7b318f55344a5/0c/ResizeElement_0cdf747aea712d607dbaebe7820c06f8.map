{"file":"/Users/dmitry.avilov/a/my/ui-kit/src/components/ResizeElement/ResizeElement.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,6CAA4F;AAGrF,IAAM,qBAAqB,GAAsD,UAAC,EAExF;QADG,QAAQ,cAAA;IAER,IAAM,SAAS,GAAiC,cAAM,CAAC,IAAI,CAAC,CAAC;IAE7D,IAAM,YAAY,GAAG,mBAAW,CAAC;QAC7B,IAAI,SAAS,CAAC,OAAO,EAAE;YACnB,QAAQ,CAAC;gBACL,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC,WAAW;gBACpC,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC,YAAY;aACzC,CAAC,CAAC;SACN;IACL,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,UAAU,GAAG,mBAAW,CAAC;;QAC3B,YAAY,EAAE,CAAC;QAEf,MAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,0CAAE,aAAa,0CAAE,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;IAChF,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,iBAAS,CAAC;QACN,OAAO,0BAAM,OAAA,MAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,0CAAE,aAAa,0CAAE,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAA,EAAA,CAAC;IAC7F,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACH,0CACI,GAAG,EAAE,SAAS,EACd,QAAQ,EAAE,CAAC,CAAC,EACZ,IAAI,EAAC,WAAW,EAChB,IAAI,EAAC,aAAa,EAClB,MAAM,EAAE,UAAU,EAClB,KAAK,EAAE;YACH,QAAQ,EAAE,UAAU;YACpB,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,CAAC;YACP,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,MAAM;YACb,aAAa,EAAE,MAAM;YACrB,MAAM,EAAE,CAAC,CAAC;YACV,OAAO,EAAE,CAAC;SACb,GACH,CACL,CAAC;AACN,CAAC,CAAC;AA3CW,QAAA,qBAAqB,yBA2ChC","names":[],"sources":["/Users/dmitry.avilov/a/my/ui-kit/src/components/ResizeElement/ResizeElement.tsx"],"sourcesContent":["import React, { FunctionComponent, useCallback, useRef, useEffect, RefObject } from 'react';\nimport { ElementResizeListenerPropsType } from './_types';\n\nexport const ElementResizeListener: FunctionComponent<ElementResizeListenerPropsType> = ({\n    onResize,\n}) => {\n    const objectRef: RefObject<HTMLObjectElement> = useRef(null);\n\n    const handleResize = useCallback(() => {\n        if (objectRef.current) {\n            onResize({\n                width: objectRef.current.clientWidth,\n                height: objectRef.current.clientHeight,\n            });\n        }\n    }, []);\n\n    const handleLoad = useCallback(() => {\n        handleResize();\n\n        objectRef?.current?.contentWindow?.addEventListener('resize', handleResize);\n    }, []);\n\n    useEffect(() => {\n        return () => objectRef?.current?.contentWindow?.addEventListener('resize', handleResize);\n    }, []);\n\n    return (\n        <object\n            ref={objectRef}\n            tabIndex={-1}\n            type=\"text/html\"\n            data=\"about:blank\"\n            onLoad={handleLoad}\n            style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                height: '100%',\n                width: '100%',\n                pointerEvents: 'none',\n                zIndex: -1,\n                opacity: 0,\n            }}\n        />\n    );\n};\n"],"version":3}