{"file":"/Users/dmitry.avilov/a/my/ui-kit/src/components/ThumbSlider/ThumbSlider.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAA2D;AAC3D,0DAA4B;AAC5B,mCAAyC;AAEzC,8BAA4B;AAU5B,IAAM,UAAU,GAAG,aAAa,CAAC;AAEpB,QAAA,WAAW,GAAG,YAAI,CAAC,UAAC,EAA6D;QAA3D,SAAS,eAAA,EAAE,WAAS,EAAT,GAAG,mBAAG,GAAG,KAAA,EAAE,WAAO,EAAP,GAAG,mBAAG,CAAC,KAAA,EAAE,QAAQ,cAAA,EAAE,KAAK,WAAA;IACvE,IAAA,KAAsB,gBAAQ,CAAC;QACjC,UAAU,EAAE,sBAAa,CAAC,EAAE,QAAQ,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC;KAC/D,CAAC,EAFK,MAAM,QAAA,EAAE,SAAS,QAEtB,CAAC;IAEH,IAAM,YAAY,GAAG,mBAAW,CAC5B,UAAC,KAAK;QACF,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;QAEjD,QAAQ,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;QAE9B,SAAS,CAAC,EAAE,UAAU,EAAE,sBAAa,CAAC,EAAE,QAAQ,UAAA,EAAE,CAAC,EAAE,CAAC,CAAC;IAC3D,CAAC,EACD,CAAC,GAAG,EAAE,QAAQ,CAAC,CAClB,CAAC;IAEF,OAAO,CACH,yCACI,SAAS,EAAE,oBAAE,CAAC,UAAU,EAAE,SAAS,CAAC,EACpC,KAAK,EAAE,MAAM,EACb,IAAI,EAAC,OAAO,EACZ,GAAG,EAAE,GAAG,EACR,GAAG,EAAE,GAAG,EACR,QAAQ,EAAE,YAAY,EACtB,KAAK,EAAE,KAAK,GACd,CACL,CAAC;AACN,CAAC,CAAC,CAAC","names":[],"sources":["/Users/dmitry.avilov/a/my/ui-kit/src/components/ThumbSlider/ThumbSlider.tsx"],"sourcesContent":["import React, { memo, useCallback, useState } from 'react';\nimport cn from 'classnames';\nimport { getBackground } from './_utils';\n\nimport './ThumbSlider.scss';\n\ntype PropsType = {\n    max?: number;\n    min?: number;\n    onChange: (params: any) => void;\n    value: number;\n    className?: string;\n};\n\nconst CLASS_NAME = 'ThumbSlider';\n\nexport const ThumbSlider = memo(({ className, max = 100, min = 0, onChange, value }: PropsType) => {\n    const [styles, setStyles] = useState({\n        background: getBackground({ progress: (value / max) * 100 }),\n    });\n\n    const handleChange = useCallback(\n        (event) => {\n            const value = event.target.value;\n            const progress = Math.round((value / max) * 100);\n\n            onChange({ value: progress });\n\n            setStyles({ background: getBackground({ progress }) });\n        },\n        [max, onChange]\n    );\n\n    return (\n        <input\n            className={cn(CLASS_NAME, className)}\n            style={styles}\n            type=\"range\"\n            min={min}\n            max={max}\n            onChange={handleChange}\n            value={value}\n        />\n    );\n});\n"],"version":3}