85353d6547b2a3e183c2bc506c3cc62f
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckboxList = void 0;
var react_1 = __importDefault(require("react"));
var bind_1 = __importDefault(require("classnames/bind"));
var components_1 = require("components");
var CheckboxList_modules_scss_1 = __importDefault(require("./CheckboxList.modules.scss"));
var cn = bind_1.default.bind(CheckboxList_modules_scss_1.default);
var CLASS_NAME = 'CheckboxList';
var CheckboxList = function (_a) {
    var _b;
    var isDisabled = _a.isDisabled, _c = _a.isLeftLabel, isLeftLabel = _c === void 0 ? false : _c, _d = _a.isSquare, isSquare = _d === void 0 ? false : _d, items = _a.items, onClick = _a.onClick;
    return (react_1.default.createElement("div", { className: cn(CLASS_NAME, (_b = {}, _b[CLASS_NAME + "--isLeftLabel"] = isLeftLabel, _b)) }, items.map(function (item) { return (react_1.default.createElement(components_1.Checkbox, __assign({ key: item.id, onClick: onClick, isDisabled: isDisabled, isLeftLabel: isLeftLabel, isSquare: isSquare, className: cn(CLASS_NAME + "__item") }, item))); })));
};
exports.CheckboxList = CheckboxList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2RtaXRyeS5hdmlsb3YvYS9teS91aS1raXQvc3JjL2NvbXBvbmVudHMvQ2hlY2tib3hMaXN0L0NoZWNrYm94TGlzdC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxnREFBMEI7QUFDMUIseURBQXlDO0FBQ3pDLHlDQUErRDtBQUMvRCwwRkFBaUQ7QUFFakQsSUFBTSxFQUFFLEdBQUcsY0FBVSxDQUFDLElBQUksQ0FBQyxtQ0FBTSxDQUFDLENBQUM7QUFDbkMsSUFBTSxVQUFVLEdBQUcsY0FBYyxDQUFDO0FBaUIzQixJQUFNLFlBQVksR0FBb0MsVUFBQyxFQU03RDs7UUFMRyxVQUFVLGdCQUFBLEVBQ1YsbUJBQW1CLEVBQW5CLFdBQVcsbUJBQUcsS0FBSyxLQUFBLEVBQ25CLGdCQUFnQixFQUFoQixRQUFRLG1CQUFHLEtBQUssS0FBQSxFQUNoQixLQUFLLFdBQUEsRUFDTCxPQUFPLGFBQUE7SUFFUCxPQUFPLENBQ0gsdUNBQUssU0FBUyxFQUFFLEVBQUUsQ0FBQyxVQUFVLFlBQUksR0FBSSxVQUFVLGtCQUFlLElBQUcsV0FBVyxNQUFHLElBQzFFLEtBQUssQ0FBQyxHQUFHLENBQUMsVUFBQyxJQUFJLElBQUssT0FBQSxDQUNqQiw4QkFBQyxxQkFBUSxhQUNMLEdBQUcsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUNaLE9BQU8sRUFBRSxPQUFPLEVBQ2hCLFVBQVUsRUFBRSxVQUFVLEVBQ3RCLFdBQVcsRUFBRSxXQUFXLEVBQ3hCLFFBQVEsRUFBRSxRQUFRLEVBQ2xCLFNBQVMsRUFBRSxFQUFFLENBQUksVUFBVSxXQUFRLENBQUMsSUFDaEMsSUFBSSxFQUNWLENBQ0wsRUFWb0IsQ0FVcEIsQ0FBQyxDQUNBLENBQ1QsQ0FBQztBQUNOLENBQUMsQ0FBQztBQXRCVyxRQUFBLFlBQVksZ0JBc0J2QiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvZG1pdHJ5LmF2aWxvdi9hL215L3VpLWtpdC9zcmMvY29tcG9uZW50cy9DaGVja2JveExpc3QvQ2hlY2tib3hMaXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcy9iaW5kJztcbmltcG9ydCB7IENoZWNrYm94LCBDaGVja2JveENsaWNrUGFyYW1zVHlwZSB9IGZyb20gJ2NvbXBvbmVudHMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL0NoZWNrYm94TGlzdC5tb2R1bGVzLnNjc3MnO1xuXG5jb25zdCBjbiA9IGNsYXNzbmFtZXMuYmluZChzdHlsZXMpO1xuY29uc3QgQ0xBU1NfTkFNRSA9ICdDaGVja2JveExpc3QnO1xuXG5leHBvcnQgdHlwZSBDaGVja2JveEl0ZW1UeXBlID0ge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgbGFiZWw/OiBzdHJpbmc7XG4gICAgbmFtZT86IHN0cmluZztcbiAgICB2YWx1ZTogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCB0eXBlIENoZWNrYm94TGlzdFByb3BzVHlwZSA9IHtcbiAgICBpc0Rpc2FibGVkPzogYm9vbGVhbjtcbiAgICBpc0xlZnRMYWJlbD86IGJvb2xlYW47XG4gICAgaXNTcXVhcmU/OiBib29sZWFuO1xuICAgIGl0ZW1zOiBBcnJheTxDaGVja2JveEl0ZW1UeXBlPjtcbiAgICBvbkNsaWNrPzogKHBhcmFtczogQ2hlY2tib3hDbGlja1BhcmFtc1R5cGUpID0+IHZvaWQ7XG59O1xuXG5leHBvcnQgY29uc3QgQ2hlY2tib3hMaXN0OiBSZWFjdC5GQzxDaGVja2JveExpc3RQcm9wc1R5cGU+ID0gKHtcbiAgICBpc0Rpc2FibGVkLFxuICAgIGlzTGVmdExhYmVsID0gZmFsc2UsXG4gICAgaXNTcXVhcmUgPSBmYWxzZSxcbiAgICBpdGVtcyxcbiAgICBvbkNsaWNrLFxufSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbihDTEFTU19OQU1FLCB7IFtgJHtDTEFTU19OQU1FfS0taXNMZWZ0TGFiZWxgXTogaXNMZWZ0TGFiZWwgfSl9PlxuICAgICAgICAgICAge2l0ZW1zLm1hcCgoaXRlbSkgPT4gKFxuICAgICAgICAgICAgICAgIDxDaGVja2JveFxuICAgICAgICAgICAgICAgICAgICBrZXk9e2l0ZW0uaWR9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgICAgICAgICAgIGlzRGlzYWJsZWQ9e2lzRGlzYWJsZWR9XG4gICAgICAgICAgICAgICAgICAgIGlzTGVmdExhYmVsPXtpc0xlZnRMYWJlbH1cbiAgICAgICAgICAgICAgICAgICAgaXNTcXVhcmU9e2lzU3F1YXJlfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2NuKGAke0NMQVNTX05BTUV9X19pdGVtYCl9XG4gICAgICAgICAgICAgICAgICAgIHsuLi5pdGVtfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG4iXSwidmVyc2lvbiI6M30=