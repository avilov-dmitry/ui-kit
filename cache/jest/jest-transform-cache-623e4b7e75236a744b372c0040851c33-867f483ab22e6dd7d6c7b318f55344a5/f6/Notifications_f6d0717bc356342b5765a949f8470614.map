{"file":"/Users/dmitry.avilov/a/my/ui-kit/src/components/Notifications/Notifications.tsx","mappings":";;;;;;;;;;;;;;;;;AAAA,gDAA0B;AAC1B,wDAAiC;AAEjC,yDAAyC;AACzC,iEAAwE;AAOxE,6CAA6C;AAC7C,0FAAiD;AAEjD,IAAM,EAAE,GAAG,cAAU,CAAC,IAAI,CAAC,mCAAM,CAAC,CAAC;AACnC,IAAM,UAAU,GAAG,eAAe,CAAC;AAWnC,IAAM,oBAAoB,GAAG;IACzB,KAAK,EAAE,GAAG;IACV,IAAI,EAAE,GAAG;CACZ,CAAC;AAEF,IAAM,eAAe,GAAG;IACpB,KAAK,EAAE,EAAE,CAAI,UAAU,kBAAe,CAAC;IACvC,IAAI,EAAE,EAAE,CAAI,UAAU,iBAAc,CAAC;CACxC,CAAC;AAEK,IAAM,aAAa,GAA8C,UAAC,EAOxE;;QANG,aAAa,mBAAA,EACb,wBAA2B,EAA3B,gBAAgB,mBAAG,QAAQ,KAAA,EAC3B,0BAA6B,EAA7B,kBAAkB,mBAAG,QAAQ,KAAA,EAC7B,KAAK,WAAA,EACL,SAAS,eAAA,EACT,OAAO,aAAA;IAEP,OAAO,mBAAQ,CAAC,YAAY,CACxB,8BAAC,wCAAe,IACZ,SAAS,EAAE,EAAE,CACT,UAAU,EACP,UAAU,mBAAc,gBAAkB,EAC1C,UAAU,mBAAc,kBAAoB;YAE3C,GAAI,UAAU,gBAAa,IAAG,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC;gBAElE,IAEA,aAAa,CAAC,GAAG,CAAC,UAAC,YAA8B;;QAAK,OAAA,CACnD,8BAAC,sCAAa,IACV,GAAG,EAAE,YAAY,CAAC,EAAE,EACpB,OAAO,EAAE,oBAAoB,EAC7B,UAAU,EAAE,eAAe;YAE3B,8BAAC,0BAAY,eACL,YAAY,IAChB,SAAS,EAAE,EAAE,CAAI,UAAU,WAAQ;oBAC/B,GAAI,UAAU,oBAAiB,IAAG,gBAAgB,KAAK,KAAK;oBAC5D,GAAI,UAAU,uBAAoB,IAAG,gBAAgB,KAAK,QAAQ;wBACpE,EACF,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,OAAO,IAClB,CACU,CACnB;IAjBsD,CAiBtD,CAAC,CACY,EAClB,QAAQ,CAAC,IAAI,CAChB,CAAC;AACN,CAAC,CAAC;AAxCW,QAAA,aAAa,iBAwCxB","names":[],"sources":["/Users/dmitry.avilov/a/my/ui-kit/src/components/Notifications/Notifications.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FunctionComponent } from 'react';\nimport classnames from 'classnames/bind';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport {\n    NotificationCloseType,\n    NotificationPositionHorizontalTypes,\n    NotificationPositionVerticalTypes,\n    NotificationType,\n} from './_types';\nimport { Notification } from './_components';\nimport styles from './Notifications.module.scss';\n\nconst cn = classnames.bind(styles);\nconst CLASS_NAME = 'Notifications';\n\nexport type NotificationsPropsType = {\n    notifications: Array<NotificationType>;\n    positionVertical?: NotificationPositionVerticalTypes;\n    positionHorizontal?: NotificationPositionHorizontalTypes;\n    delay?: number;\n    withClose?: boolean;\n    onClose: NotificationCloseType;\n};\n\nconst CSSTransitionTimeout = {\n    enter: 500,\n    exit: 500,\n};\n\nconst CSSTransitionCN = {\n    enter: cn(`${CLASS_NAME}__item--enter`),\n    exit: cn(`${CLASS_NAME}__item--exit`),\n};\n\nexport const Notifications: FunctionComponent<NotificationsPropsType> = ({\n    notifications,\n    positionVertical = 'bottom',\n    positionHorizontal = 'center',\n    delay,\n    withClose,\n    onClose,\n}) => {\n    return ReactDOM.createPortal(\n        <TransitionGroup\n            className={cn(\n                CLASS_NAME,\n                `${CLASS_NAME}--position-${positionVertical}`,\n                `${CLASS_NAME}--position-${positionHorizontal}`,\n                {\n                    [`${CLASS_NAME}--isVisible`]: Boolean(notifications.length),\n                }\n            )}\n        >\n            {notifications.map((notification: NotificationType) => (\n                <CSSTransition\n                    key={notification.id}\n                    timeout={CSSTransitionTimeout}\n                    classNames={CSSTransitionCN}\n                >\n                    <Notification\n                        {...notification}\n                        className={cn(`${CLASS_NAME}__item`, {\n                            [`${CLASS_NAME}__item--fromTop`]: positionVertical === 'top',\n                            [`${CLASS_NAME}__item--fromBottom`]: positionVertical === 'bottom',\n                        })}\n                        delay={delay}\n                        withClose={withClose}\n                        onClose={onClose}\n                    />\n                </CSSTransition>\n            ))}\n        </TransitionGroup>,\n        document.body\n    );\n};\n"],"version":3}