{"file":"/Users/dmitry.avilov/a/my/components/src/components/Button/Button.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yDAAyC;AACzC,6CAAoE;AAEpE,4EAA0C;AAE1C,IAAM,EAAE,GAAG,cAAU,CAAC,IAAI,CAAC,4BAAM,CAAC,CAAC;AACnC,IAAM,UAAU,GAAG,QAAQ,CAAC;AAEf,QAAA,MAAM,GAAuC,YAAI,CAC1D,UAAC,EAYA;;QAXG,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,EAAE,QAAA,EACF,kBAAkB,EAAlB,UAAU,mBAAG,KAAK,KAAA,EAClB,mBAAmB,EAAnB,WAAW,mBAAG,KAAK,KAAA,EACT,QAAQ,cAAA,EAClB,OAAO,aAAA,EACI,SAAS,eAAA,EACpB,YAAS,EAAT,IAAI,mBAAG,EAAE,KAAA,EACT,YAAe,EAAf,IAAI,mBAAG,QAAQ,KAAA,EACf,eAAmB,EAAnB,OAAO,mBAAG,SAAS,KAAA;IAEnB,IAAM,WAAW,GAAG,mBAAW,CAC3B,UAAC,KAAoC;QACjC,IAAI,OAAO,IAAI,CAAC,UAAU,EAAE;YACxB,OAAO,CAAC,EAAE,KAAK,OAAA,EAAE,EAAE,IAAA,EAAE,CAAC,CAAC;SAC1B;IACL,CAAC,EACD,CAAC,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC,CAC5B,CAAC;IAEF,OAAO,CACH,0CACI,EAAE,EAAE,EAAE,EACN,SAAS,EAAE,EAAE,CACT,UAAU;YAEN,GAAI,UAAU,kBAAe,IAAG,OAAO,KAAK,WAAW;YACvD,GAAI,UAAU,iBAAc,IAAG,UAAU;YACzC,GAAI,UAAU,kBAAe,IAAG,WAAW;iBAE/C,SAAS,CACZ,EACD,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,WAAW,EACpB,QAAQ,EAAE,UAAU,IAEnB,QAAQ,IAAI,CACT;QACK,QAAQ,IAAI,CACT,wCAAM,SAAS,EAAE,EAAE,CAAI,UAAU,iBAAc,CAAC;YAC5C,8BAAC,QAAQ,OAAG,CACT,CACV;QACA,IAAI,IAAI,wCAAM,SAAS,EAAE,EAAE,CAAI,UAAU,WAAQ,CAAC,IAAG,IAAI,CAAQ;QACjE,SAAS,IAAI,CACV,wCAAM,SAAS,EAAE,EAAE,CAAI,UAAU,kBAAe,CAAC;YAC7C,8BAAC,SAAS,OAAG,CACV,CACV,CACF,CACN,CACI,CACZ,CAAC;AACN,CAAC,CACJ,CAAC;AAEF,cAAM,CAAC,WAAW,GAAG,QAAQ,CAAC","names":[],"sources":["/Users/dmitry.avilov/a/my/components/src/components/Button/Button.tsx"],"sourcesContent":["import classnames from 'classnames/bind';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport { ButtonPropsType } from './_types';\nimport styles from './Button.module.scss';\n\nconst cn = classnames.bind(styles);\nconst CLASS_NAME = 'Button';\n\nexport const Button: FunctionComponent<ButtonPropsType> = memo(\n    ({\n        children,\n        className,\n        id,\n        isDisabled = false,\n        isFullWidth = false,\n        leftIcon: LeftIcon,\n        onClick,\n        rightIcon: RightIcon,\n        text = '',\n        type = 'button',\n        variant = 'primary',\n    }) => {\n        const handleClick = useCallback(\n            (event: React.MouseEvent<HTMLElement>) => {\n                if (onClick && !isDisabled) {\n                    onClick({ event, id });\n                }\n            },\n            [id, isDisabled, onClick]\n        );\n\n        return (\n            <button\n                id={id}\n                className={cn(\n                    CLASS_NAME,\n                    {\n                        [`${CLASS_NAME}--isSecondary`]: variant === 'secondary',\n                        [`${CLASS_NAME}--isDisabled`]: isDisabled,\n                        [`${CLASS_NAME}--isFullWidth`]: isFullWidth,\n                    },\n                    className\n                )}\n                type={type}\n                onClick={handleClick}\n                disabled={isDisabled}\n            >\n                {children || (\n                    <>\n                        {LeftIcon && (\n                            <span className={cn(`${CLASS_NAME}__icon--left`)}>\n                                <LeftIcon />\n                            </span>\n                        )}\n                        {text && <span className={cn(`${CLASS_NAME}__text`)}>{text}</span>}\n                        {RightIcon && (\n                            <span className={cn(`${CLASS_NAME}__icon--right`)}>\n                                <RightIcon />\n                            </span>\n                        )}\n                    </>\n                )}\n            </button>\n        );\n    }\n);\n\nButton.displayName = 'Button';\n"],"version":3}